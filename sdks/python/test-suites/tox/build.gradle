/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins { id 'org.apache.beam.module' }
applyPythonNature()

task lint {}
check.dependsOn lint

// configure lint tasks
getTaskRunningPythonVersions('lint_task_py_versions').each {
  def versionSuffix = getVersionSuffix(it)
  if (versionSuffix == '2') {
    versionSuffix = it.replace('.', '')
    def taskName = "lintPy${versionSuffix}"
    toxTask taskName, "py${versionSuffix}-lint", it
    def taskName3 = taskName + "_3"
    toxTask taskName3, "py${versionSuffix}-lint3", it
    lint.dependsOn = [taskName, taskName3]
  } else {
    def taskName = "lintPy${versionSuffix}"
    toxTask taskName, "py${versionSuffix}-lint", it
    lint.dependsOn taskName
  }
}

getTaskRunningPythonVersions('mypy_task_py_versions').each {
  def versionSuffix = getVersionSuffix(it)
  def taskName = "mypyPy${versionSuffix}"
  toxTask taskName, "py${versionSuffix}-mypy", it
  lint.dependsOn taskName
}

// configure formatter tasks
getTaskRunningPythonVersions('yapf_task_py_versions').each {
  def versionSuffix = getVersionSuffix(it)
  def majorVersionSuffix = it.split(',')[0]
  def taskName = "formatterPy${versionSuffix}"
  toxTask taskName, "py${majorVersionSuffix}-yapf-check", it
  check.dependsOn taskName
}

